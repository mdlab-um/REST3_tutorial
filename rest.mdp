; ref: /home/xrliu/work/research/tutorial/rest/REMD_SRC_from_Pang.mdp
; ref3: cut-off was set based on the a99sb-disp paper

title	        = REST simulation under NVT

; Run parameters
integrator      = md	        ; leap-frog integrator
nsteps	        = 50000000      ; 0.002 * 500000000 = 1000000 ps = 1000 ns
dt	        = 0.002         ; 2 fs

; Output control
nstxout	        = 0             ; save coordinates every 1 ps
nstvout         = 0
nstxtcout       = 10000          ; xtc compressed trajectory output every 20 ps
nstenergy       = 10000          ; save energies every 20 ps
nstlog	        = 10000          ; update log file every 20 ps
compressed-x-grps = Protein      ; only output traj for protein

; Bond parameters
continuation    = no		; first dynamics run
constraint_algorithm = lincs	; holonomic constraints 
constraints     = h-bonds	; all bonds (even heavy atom-H bonds) constrained
lincs_iter      = 1		; accuracy of LINCS
lincs_order     = 4		; also related to accuracy

; Neighborsearching
cutoff-scheme   = Verlet        ; with GPUs (only supported with the Verlet cut-off scheme)
ns-type	        = grid		; search neighboring grid cells
nstlist	        = 5		; 10 fs
rlist	        = 1.2		; short-range neighborlist cutoff (in nm)

; Nonbonded
vdwtype         = cutoff
rvdw	        = 1.2		; short-range van der Waals cutoff (in nm)

; Electrostatics
coulombtype	= PME		; Particle Mesh Ewald for long-range electrostatics
rcoulomb        = 1.2		; short-range electrostatic cutoff (in nm)
pme_order	= 4		; cubic interpolation
ewald_rtol      = 1e-5
fourierspacing	= 0.12		; grid spacing for FFT
optimize_fft	= yes

; Temperature coupling is on
tcoupl		= V-rescale	; modified Berendsen thermostat
tc-grps		= Protein Non-Protein	; two coupling groups - more accurate
tau_t		= 0.1	0.1	; time constant, in ps
ref_t		= 298 	298	; reference temperature, one for each group, in K

; Pressure coupling
Pcoupl          = no

; Periodic boundary conditions
pbc		= xyz		; 3-D PBC

; Dispersion correction
DispCorr	= EnerPres

; Velocity generation
gen_vel		= yes           ; assign velocities from Maxwell distribution
gen_temp	= 298   	; temperature for Maxwell distribution
gen_seed	= -1		; generate a random seed
